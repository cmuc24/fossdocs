{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"selfhosted_media_server/","title":"Index","text":"<p>Entry for Section</p> <p>Tell me more Tell me more Tell me more</p> VideoAudioImageseBooksMangasComicBooksPlex Emby Jelly Jelly"},{"location":"selfhosted_media_server/airsonicadvanced/","title":"Airsonic Advanced","text":""},{"location":"selfhosted_media_server/airsonicadvanced/#description","title":"Description","text":"<p>Airsonic Advanced (An Airsonic fork ) is a free, web-based media streamer, providing ubiquitous access to your music. Use it to share your music with friends, or to listen to your own music while at work. You can stream to multiple players simultaneously, for instance to one player in your kitchen and another in your living room.</p>"},{"location":"selfhosted_media_server/airsonicadvanced/#installsetup","title":"Install/Setup","text":"<p>Please refer to the container Application Setup documentation. Note that upgrading from Airsonic to Airsonic-Advanced is not officially supported, however it may work. Be sure to backup your config folder before attempting an upgrade. After making a backup, you may be able to copy your Airsonic config to the Airsonic-Advanced config folder, and see if the container logs report any issues.</p>"},{"location":"selfhosted_media_server/calibre/","title":"Calibre","text":""},{"location":"selfhosted_media_server/calibre/#description","title":"Description","text":"<p>Calibre is a powerful and easy to use e-book manager.</p>"},{"location":"selfhosted_media_server/calibre/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. </p>"},{"location":"selfhosted_media_server/calibreweb/","title":"Calibre-Web","text":""},{"location":"selfhosted_media_server/calibreweb/#description","title":"Description","text":"<p>Calibre-web is a web app providing a clean interface for browsing, reading and downloading eBooks using an existing Calibre database. It is also possible to integrate google drive and edit metadata and your calibre library through the app itself.</p>"},{"location":"selfhosted_media_server/calibreweb/#installsetup","title":"Install/Setup","text":"<p>The Calibre-Web docker is only a web front end to the actual Calibre application/database itself. You still need a Calibre  metadata.db file for Calibre Web to function. To get this, you have to install Calibre somewhere and you can move the metadata.db file into your /storage folder.</p>"},{"location":"selfhosted_media_server/emby/","title":"Emby","text":""},{"location":"selfhosted_media_server/emby/#description","title":"Description","text":"<p>Emby organizes video, music, live TV, and photos from personal media libraries and streams them to smart TVs, streaming boxes and mobile devices.</p>"},{"location":"selfhosted_media_server/emby/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. </p>"},{"location":"selfhosted_media_server/jellyfin/","title":"Jellyfin","text":""},{"location":"selfhosted_media_server/jellyfin/#description","title":"Description","text":"<p>Jellyfin is a free software media system that puts you in control of managing and streaming your media. It is an alternative to the proprietary Emby and Plex, to provide media from a dedicated server to end-user devices via multiple apps. Jellyfin is descended from Emby's 3.5.2 release and ported to the .NET Core framework to enable full cross-platform support. There are no strings attached, no premium licenses or features, and no hidden agendas: just a team who wants to build something better and work together to achieve it.</p>"},{"location":"selfhosted_media_server/jellyfin/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. </p>"},{"location":"selfhosted_media_server/kavita/","title":"Kavita","text":""},{"location":"selfhosted_media_server/kavita/#demo","title":"Demo","text":"<p>Demo is available at: https://demo.kavitareader.com You can login with the following credentials:</p> <p>Username: demouser Password: Demouser64</p>"},{"location":"selfhosted_media_server/kavita/#related-links","title":"Related links","text":"<p>https://opencollective.com/Kavita  https://hub.docker.com/r/kizaing/kavita</p>"},{"location":"selfhosted_media_server/kavita/#summary","title":"Summary","text":"<p>Lighting fast with a slick design, Kavita is a rocket fueled self-hosted digital library which supports a vast array of file formats. Install to start reading and share your server with your friends.</p>"},{"location":"selfhosted_media_server/kavita/#description","title":"Description","text":"<p>Kavita is a fast, feature rich, cross platform reading server. Built with a focus for manga and the goal of being a full solution for all your reading needs. Setup your own server and share your reading collection with your friends and family.</p>"},{"location":"selfhosted_media_server/kavita/#installsetup","title":"Install/Setup","text":"<p>This application does not (yet) have any specific setup instructions documented. </p>"},{"location":"selfhosted_media_server/plex/","title":"Plex","text":"Method linuxserver.io plex.tv docker hub  https://hub.docker.com/r/linuxserver/plex   https://hub.docker.com/r/plexinc/pms-docker/ github  https://github.com/linuxserver/docker-plex  https://github.com/plexinc/pms-docker Compose TPL  https://github.com/GhostWriters/DockSTARTer/tree/master/compose/.apps/plex <p>OS Downloads: FreeBSD Linux Mac Windows  Nas Downloads: ASUSTOR Drobo FreeNAS Netgear QNAP Seagate Synology Synology (DSM 7) TerraMaster TerraMaster (TOS 5) Thecus unRAlD Western Digital  Docker Download </p>"},{"location":"selfhosted_media_server/plex/#description","title":"Description","text":"<p>Plex organizes video, music and photos from personal media libraries and streams them to smart TVs, streaming boxes and mobile devices. This container is packaged as a standalone Plex Media Server. has always been a top priority. Straightforward design and bulk actions mean getting things done faster.</p>"},{"location":"selfhosted_media_server/plex/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. </p>"},{"location":"selfhosted_media_server/plex/#common-issue-playback-fails-for-certain-media","title":"Common Issue: Playback fails for certain media","text":"<p>One possible resolution to this issue is to remove the codecs folder:</p> <pre><code>rm -rf \"~/.config/appdata/plex/Library/Application Support/Plex Media Server/Codecs\"\n</code></pre> <p>Or place a custom init script in your config (ex: <code>~/.config/appdata/plex/custom-cont-init.d/00-plex-remove-codecs</code>):</p> <pre><code>#!/usr/bin/with-contenv bash\nset -Eeuo pipefail\nIFS=$'\\n\\t'\n\nrm -rf \"/config/Library/Application Support/Plex Media Server/Codecs\"\necho \"Codecs removed.\"\n</code></pre> <p>This will run every time the container restarts.</p>"},{"location":"selfhosted_media_server/plex/#common-issue-cannot-claim-server-on-first-run","title":"Common Issue: Cannot Claim Server on First Run","text":"<p>If you are starting the Plex container for the first time and cannot claim your server to set it up there are 3 methods you can try to resolve the issue:</p>"},{"location":"selfhosted_media_server/plex/#1-set-the-plex_claim-variable","title":"1. Set the PLEX_CLAIM variable","text":"<pre><code>docker stop plex\ndocker rm plex\n</code></pre> <pre><code># removes the config folder for plex\n# !WARNING! do NOT do this if you have already setup your plex server and are having issues connecting to it, skip to option 3 instead\nrm -rf ~/.config/appdata/plex\n</code></pre> <pre><code>sudo nano ~/.docker/compose/.env\n# with the nano file editor open locate the PLEX_CLAIM variable\n# go to https://www.plex.tv/claim/ in your browser and get the claim token set your PLEX_CLAIM variable\n# the token expires in 5 minutes, so we'll want to get the rest done quickly\n# ctrl+x to save and exit nano\n</code></pre> <pre><code>ds -c up plex\n</code></pre> <p>Then try again to claim the server by visiting <code>http://yourserverip:32400/web/index.html</code></p>"},{"location":"selfhosted_media_server/plex/#2-host-network-mode","title":"2. Host Network Mode","text":"<p>If the first method does not work, edit your <code>.env</code> and set <code>PLEX_NETWORK_MODE=host</code>. Run <code>ds -c</code> and then attempt to claim your server. After claiming your server set <code>PLEX_NETWORK_MODE=</code> (back to blank).</p>"},{"location":"selfhosted_media_server/plex/#3-claim-helper-script","title":"3. Claim helper script","text":"<p>If the first and second methods both have not worked this script should make it happen.</p> <pre><code>docker exec -it plex /bin/bash\n</code></pre> <pre><code># download the script\ncurl -L -o plex-claim-server.sh https://github.com/uglymagoo/plex-claim-server/raw/master/plex-claim-server.sh\n</code></pre> <pre><code># make the script executable\nchmod +x plex-claim-server.sh\n</code></pre> <pre><code># go to https://www.plex.tv/claim/ in your browser and get the claim token and replace PLEX_CLAIM with this token in the next command, please use use the double quotes around your claim token\n./plex-claim-server.sh \"PLEX_CLAIM\"\n</code></pre> <pre><code># fix permissions\nchown abc:abc \"/config/Library/Application Support/Plex Media Server/Preferences.xml\"\n</code></pre> <pre><code># leave the container\nexit\n</code></pre> <pre><code>docker restart plex\n</code></pre>"},{"location":"selfhosted_media_server/plex/#how-to-run-plex-different-pass-versions","title":"How To Run Plex Different Pass Versions","text":"<p>Edit <code>~/.docker/compose/.env</code> and set:</p> <pre><code>PLEX_VERSION=plexpass\n</code></pre> <p>Then run:</p> <pre><code>ds -c up plex\n</code></pre>"},{"location":"selfhosted_media_server/plex/#rebuilding-from-scratch","title":"Rebuilding From Scratch","text":"<p>Thankfully, some of this information is well documented (but not easily found) over on Plex's website here!</p> <ul> <li>Moving an installation to another system:   https://support.plex.tv/articles/201370363-move-an-install-to-another-system/</li> <li>Where is the Plex Media Server data directory?   https://support.plex.tv/articles/202915258-where-is-the-plex-media-server-data-directory-located/</li> </ul>"},{"location":"selfhosted_media_server/plex/#hardware-transcoding","title":"Hardware Transcoding","text":"<p>If you would like to have Plex use a GPU that is attached to your DockSTARTer host, you can do this using an override like so:</p> <pre><code>  plex:\n    devices:\n      - /dev/dri:/dev/dri\n</code></pre> <p>Refer to this forum post for details: Using Hardware Acceleration in Docker</p>"},{"location":"selfhosted_media_server/plex/#using-fast-or-large-storage-for-specific-plex-configs","title":"Using fast or large storage for specific Plex configs","text":"<p>By default Plex will Cache, Log, Transcode, and store metadata to the config folder for Plex (usually <code>~/.config/appdata/plex/</code>). You may wish to use other disks that are faster, or have more space available for these things. You can do this using an override like so:</p> <pre><code>  plex:\n    volumes:\n      - \"/mnt/fastDisk/cache:/config/Library/Application Support/Plex Media Server/Cache\"\n      - \"/mnt/bigDisk/logs:/config/Library/Application Support/Plex Media Server/Logs\"\n      - \"/mnt/bigDisk/media:/config/Library/Application Support/Plex Media Server/Media\"\n      - \"/mnt/bigDisk/metadata:/config/Library/Application Support/Plex Media Server/Metadata\"\n      - \"/mnt/fastDisk/transcode:/config/Library/Application Support/Plex Media Server/Cache/Transcode/Sessions\"\n</code></pre> <p>These volumes are all optional. If your config folder runs on an SSD with enough space you might not need any of them. If your config is stored on an SSD with very little space, you might only relocate the ones above that mention <code>bigDisk</code>. If your config is stored on a slower disk with plenty of space you might only relocate the ones above that mention <code>fastDisk</code>.</p>"},{"location":"selfhosted_media_server/ubooquity/","title":"Ubooquity (Comics)","text":""},{"location":"selfhosted_media_server/ubooquity/#description","title":"Description","text":"<p>Ubooquity is a free, lightweight and easy-to-use home server for your comics and ebooks. Use it to access your files from anywhere, with a tablet, an e-reader, a phone or a computer.</p>"},{"location":"selfhosted_media_server/ubooquity/#installsetup","title":"Install/Setup","text":"<p>This application does not have any specific setup instructions documented. </p>"}]}